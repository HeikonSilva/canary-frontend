// This file is auto-generated by @hey-api/openapi-ts

export type GetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/';
};

export type GetResponses = {
    /**
     * Default Response
     */
    200: {
        message: string;
    };
};

export type GetResponse = GetResponses[keyof GetResponses];

export type GetSecurityAwnserData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/security-awnser';
};

export type GetSecurityAwnserResponses = {
    /**
     * Default Response
     */
    200: {
        securityQuestions: Array<{
            id: number;
            question: string;
        }>;
    };
};

export type GetSecurityAwnserResponse = GetSecurityAwnserResponses[keyof GetSecurityAwnserResponses];

export type PostCreateUserData = {
    body: {
        name: string;
        password: string;
        displayName?: string;
        securityAnswers: [
            {
                questionId: number;
                answer: string;
            },
            {
                questionId: number;
                answer: string;
            },
            {
                questionId: number;
                answer: string;
            }
        ];
    };
    path?: never;
    query?: never;
    url: '/create-user';
};

export type PostCreateUserErrors = {
    /**
     * Default Response
     */
    400: {
        message: string;
    };
};

export type PostCreateUserError = PostCreateUserErrors[keyof PostCreateUserErrors];

export type PostCreateUserResponses = {
    /**
     * Default Response
     */
    201: {
        id: string;
        name: string;
        displayName?: string;
        createdAt: string;
        updatedAt: string;
    };
};

export type PostCreateUserResponse = PostCreateUserResponses[keyof PostCreateUserResponses];

export type PostLoginData = {
    body: {
        name: string;
        password: string;
    };
    path?: never;
    query?: never;
    url: '/login';
};

export type PostLoginErrors = {
    /**
     * Default Response
     */
    400: {
        message: string;
    };
};

export type PostLoginError = PostLoginErrors[keyof PostLoginErrors];

export type PostLoginResponses = {
    /**
     * Default Response
     */
    200: {
        token: string;
    };
};

export type PostLoginResponse = PostLoginResponses[keyof PostLoginResponses];

export type GetProfileData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/profile';
};

export type GetProfileErrors = {
    /**
     * Default Response
     */
    401: {
        message: string;
    };
};

export type GetProfileError = GetProfileErrors[keyof GetProfileErrors];

export type GetProfileResponses = {
    /**
     * Default Response
     */
    200: {
        id: string;
        name: string;
        displayName?: string;
        createdAt: string;
        updatedAt: string;
    };
};

export type GetProfileResponse = GetProfileResponses[keyof GetProfileResponses];

export type PostResetPasswordData = {
    body: {
        name: string;
        securityAnswers: [
            {
                questionId: number;
                answer: string;
            },
            {
                questionId: number;
                answer: string;
            },
            {
                questionId: number;
                answer: string;
            }
        ];
        newPassword: string;
    };
    path?: never;
    query?: never;
    url: '/reset-password';
};

export type PostResetPasswordErrors = {
    /**
     * Default Response
     */
    400: {
        message: string;
    };
};

export type PostResetPasswordError = PostResetPasswordErrors[keyof PostResetPasswordErrors];

export type PostResetPasswordResponses = {
    /**
     * Default Response
     */
    200: {
        message: string;
    };
};

export type PostResetPasswordResponse = PostResetPasswordResponses[keyof PostResetPasswordResponses];

export type ClientOptions = {
    baseUrl: 'http://localhost:3000' | (string & {});
};